name: Release

on:
  push:
    tags:
      - 'v*'

env:
  GO_VERSION: "1.21"

permissions:
  contents: write
  packages: write

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Antoine CLI ${{ github.ref_name }}
          body: |
            ## What's New in ${{ github.ref_name }}
            
            ðŸ¤– Antoine CLI continues to evolve as your Ultimate Hackathon Mentor!
            
            ### ðŸš€ Key Features
            - Intelligent hackathon discovery
            - Deep project analysis
            - AI-powered mentorship
            - MCP server integrations
            
            ### ðŸ“¦ Installation
            ```bash
            curl -fsSL https://get.antoine.ai | sh
            ```
            
            ### ðŸ’» Platform Support
            - Linux (amd64, arm64)
            - macOS (amd64, arm64) 
            - Windows (amd64)
            
            Full changelog: https://github.com/username/antoine-cli/compare/v1.0.0...${{ github.ref_name }}
          draft: false
          prerelease: false

  build-and-upload:
    name: Build and Upload Assets
    runs-on: ubuntu-latest
    needs: create-release

    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            asset_name: antoine-linux-amd64
          - goos: linux
            goarch: arm64
            asset_name: antoine-linux-arm64
          - goos: darwin
            goarch: amd64
            asset_name: antoine-darwin-amd64
          - goos: darwin
            goarch: arm64
            asset_name: antoine-darwin-arm64
          - goos: windows
            goarch: amd64
            asset_name: antoine-windows-amd64.exe

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Get version
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
        run: |
          BUILD_TIME=$(date -u '+%Y-%m-%d_%H:%M:%S')
          LDFLAGS="-s -w -X 'main.Version=${{ steps.version.outputs.VERSION }}' -X 'main.BuildTime=${BUILD_TIME}'"
          go build -ldflags="${LDFLAGS}" -o ${{ matrix.asset_name }} ./cmd/antoine

      - name: Calculate checksum
        run: |
          if [ "${{ matrix.goos }}" = "windows" ]; then
            sha256sum ${{ matrix.asset_name }} > ${{ matrix.asset_name }}.sha256
          else
            shasum -a 256 ${{ matrix.asset_name }} > ${{ matrix.asset_name }}.sha256
          fi

      - name: Upload binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./${{ matrix.asset_name }}
          asset_name: ${{ matrix.asset_name }}
          asset_content_type: application/octet-stream

      - name: Upload checksum
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./${{ matrix.asset_name }}.sha256
          asset_name: ${{ matrix.asset_name }}.sha256
          asset_content_type: text/plain

  publish-docker:
    name: Publish Docker Image
    runs-on: ubuntu-latest
    needs: create-release

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get version
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            antoine/cli:latest
            antoine/cli:${{ steps.version.outputs.VERSION }}
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ steps.version.outputs.VERSION }}
          labels: |
            org.opencontainers.image.title=Antoine CLI
            org.opencontainers.image.description=Your Ultimate Hackathon Mentor
            org.opencontainers.image.version=${{ steps.version.outputs.VERSION }}
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

  update-homebrew:
    name: Update Homebrew Formula
    runs-on: ubuntu-latest
    needs: [create-release, build-and-upload]

    steps:
      - name: Update Homebrew formula
        uses: dawidd6/action-homebrew-bump-formula@v3
        with:
          token: ${{ secrets.HOMEBREW_TOKEN }}
          formula: antoine-cli
          tag: ${{ github.ref_name }}
          force: false
